#BlueJ class context
comment0.target=TestServer
comment0.text=\r\n\ This\ class\ is\ used\ to\ communicate\ with\ the\ test\ server.\r\n\r\n\ Errors\ should\ be\ reported\ via\ the\ webboard.\r\n\ Describe\ the\ problem\ as\ detailed\ and\ precise\ as\ possible.\r\n\ If\ we\ cannot\ reproduce\ it,\ we\ cannot\ fix\ it.\r\n\r\n\ @author\ Nikolaj\ I.\ Schwartzbach\ &\ Asger\ Phillip\ Andersen\r\n\ @version\ 2023-11-22\r\n
comment1.params=
comment1.target=TestServer()
comment10.params=url\ dest
comment10.target=void\ downloadFile(java.lang.String,\ java.lang.String)
comment10.text=\r\n\ This\ method\ downloads\ a\ file\ from\ a\ url\ and\ saves\ it\ to\ the\ local\ machine.\r\n\ \r\n\ @param\ url\ \ The\ url\ from\ which\ to\ download.\r\n\ @param\ dest\ The\ destination\ of\ the\ downloaded\ file.\r\n
comment11.params=location\ arguments
comment11.target=java.lang.String\ sendPost(java.lang.String,\ java.util.Map)
comment11.text=\r\n\ This\ method\ sends\ an\ HTTP\ POST\ request\ to\ a\ specified\ location\ with\ some\r\n\ arguments.\r\n\ \r\n\ @param\ location\ \ URL\ to\ POST\ to.\r\n\ @param\ arguments\ HTTP\ header\ arguments.\r\n\ @return\ Response\ from\ the\ URL\ (if\ any).\r\n\ @throws\ IOException\ For\ various\ reasons.\r\n
comment12.params=
comment12.target=void\ setSrcDir()
comment13.params=
comment13.target=boolean\ isAlive()
comment2.params=
comment2.target=void\ updateTestServer()
comment2.text=\r\n\ Downloads\ any\ available\ updates\ to\ the\ testserver\ file.\r\n\ \r\n\ @throws\ IOException\r\n
comment3.params=
comment3.target=void\ checkForUpdates()
comment3.text=\r\n\ Checks\ if\ there\ is\ an\ update\ available,\ for\ the\ testserver.\r\n\ NOT\ CURRENTLY\ IN\ USE\r\n
comment4.params=
comment4.target=boolean\ updateAvailable()
comment4.text=\r\n\ Checks\ if\ there\ is\ an\ update\ available,\ used\ in\ both\ the\ public\ method,\ and\r\n\ the\ download\ method\r\n\ \r\n\ @return\ true\ when\ there\ is\ an\ update\ available,\ otherwise\ false.\r\n
comment5.params=testServerInputStream
comment5.target=java.lang.String\ parseVersionDate(java.io.InputStream)
comment5.text=\r\n\ Parses\ the\ version\ date\ of\ the\ testserver\ file\ specified\ in\ the\ inputstream\r\n\ \r\n\ @param\ testServerInputStream\ -\ An\ input\ stream\ to\ the\ testserver\ file\r\n\ @return\ The\ version\ date\ of\ the\ given\ file,\ as\ a\ string.\ uuuu-MM-dd\r\n\ \ \ \ \ \ \ \ \ formatted.\r\n
comment6.params=exercise
comment6.target=void\ download(java.lang.String)
comment6.text=\r\n\ Downloads\ the\ latest\ files\ from\ the\ course\ webpage.\r\n\ \r\n\ @param\ exercise\ one\ of\:\ CG1,\ CG3,\ CG5\r\n
comment7.params=exercise
comment7.target=void\ testAndOpenInBrowser(java.lang.String)
comment7.text=\r\n\ Tests\ exercise\ and\ open\ the\ resulting\ link\ in\ the\ default\ browser\ (if\r\n\ uploaded\ successfully).\r\n\ \r\n\ @param\ exercise\ Short\ name\ of\ exercise.\r\n
comment8.params=exercise
comment8.target=java.lang.String\ test(java.lang.String)
comment8.text=\r\n\ Tests\ exercise\ in\ the\ classpath\ (the\ folder\ from\ which\ the\ program\ is\r\n\ invoked).\r\n\ \r\n\ @param\ exercise\ Short\ name\ of\ exercise.\r\n
comment9.params=version\ files
comment9.target=void\ downloadCourseFiles(java.lang.String,\ java.lang.String[])
comment9.text=\r\n\ This\ method\ downloads\ a\ variable\ number\ of\ files\ as\ specified\ by\ files.\r\n\ \r\n\ @param\ version\ The\ version\ of\ the\ files\ to\ download.\ One\ of\:\ cg1,\ cg2,\ cg3.\r\n\ @param\ files\ \ \ The\ files\ to\ download.\r\n
numComments=14
